//
//  ExploitViewController.m
//  Esterel-Alpha
//
//  Created by Paul Vanhaesebrouck on 19/02/2014.
//
//

#import "ExploitViewController.h"

#import "SplitViewController.h"
#import "TimeTools.h"
#import "Mission.h"

@interface ExploitViewController () {
    
    IBOutlet MyTextField *actPN;
    IBOutlet MyTextField *xls;
    IBOutlet MyTextField *sicops;
    IBOutlet MyTextField *meat;
    IBOutlet MyTextField *att;
    IBOutlet MyTextField *refent;
    IBOutlet MyTextField *registreAC;
    
    IBOutlet UILabel *flightTime;
    IBOutlet UILabel *betweenBlocksTime;
    IBOutlet UILabel *landings;
    IBOutlet UILabel *fuelBurned;
    
    Mission *mission;
}

@end

@implementation ExploitViewController


- (void)viewDidLoad
{
    [super viewDidLoad];
    
    UIBarButtonItem *saveButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemSave target:self.splitViewController action:@selector(saveMission)];
    
    self.navigationItem.rightBarButtonItem = saveButton;
    
    actPN.myDelegate = self;
    xls.myDelegate = self;
    sicops.myDelegate = self;
    meat.myDelegate = self;
    att.myDelegate = self;
    refent.myDelegate = self;
    registreAC.myDelegate = self;
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    mission = ((SplitViewController*)self.presentingViewController).mission;
    
    actPN.text = mission.root[@"ActPN"];
    xls.text = mission.root[@"XLS"];
    sicops.text = mission.root[@"SICOPS"];
    meat.text = mission.root[@"MEAT"];
    refent.text = mission.root[@"RefEnt"];
    att.text = mission.root[@"ATT"];
    registreAC.text = mission.root[@"RegistreAC"];
    
    
    NSMutableArray *flightTimeArray = [NSMutableArray arrayWithCapacity:mission.legs.count], *betweenBlocksTimeArray = [NSMutableArray arrayWithCapacity:mission.legs.count];
    
    NSInteger landingsCounter = 0, fuelBurnedCounter = 0;
    
    for (NSDictionary *leg in mission.legs) {
        
        [flightTimeArray addObject:leg[@"FlightTime"]];
        [betweenBlocksTimeArray addObject:leg[@"BetweenBlocksTime"]];
        
        landingsCounter += [leg[@"Landings"] integerValue];
        fuelBurnedCounter += [leg[@"FuelBurned"] integerValue];
    }
    
    NSDate  *flightTimeDate = [TimeTools sumOfTimes:flightTimeArray],
    *betweenBlocksTimeDate = [TimeTools sumOfTimes:betweenBlocksTimeArray];
    
    flightTime.text =  [TimeTools stringFromTime:flightTimeDate withDays:YES];
    betweenBlocksTime.text =  [TimeTools stringFromTime:betweenBlocksTimeDate withDays:YES];
    
    landings.text = @(landingsCounter).description;
    fuelBurned.text = [NSString stringWithFormat:@"%ld kg = %.0f L", (long)fuelBurnedCounter, (fuelBurnedCounter / 0.8) + 0.5];
    
    mission.root[@"TotalFlightTime"] = flightTimeDate;
    mission.root[@"TotalBetweenBlocksTime"] = betweenBlocksTimeDate;
    mission.root[@"LandingsTotal"] = landings.text;
    mission.root[@"FuelBurnedTotal"] = fuelBurned.text;
}


- (IBAction)cancel:(id)sender {
    
    [self dismissViewControllerAnimated:YES completion:nil];
}


# pragma mark - MyTextField delegate

- (void)myTextFieldDidEndEditing:(UITextField *)textField
{
    switch (textField.tag) {
        case 1: mission.root[@"MEAT"] = textField.text;
            break;
        case 2: mission.root[@"SICOPS"] = textField.text;
            break;
        case 3: mission.root[@"ActPN"] = textField.text;
            break;
        case 4: mission.root[@"XLS"] = textField.text;
            break;
        case 5: mission.root[@"ATT"] = textField.text;
            break;
        case 6: mission.root[@"RefEnt"] = textField.text;
            break;
        case 7: mission.root[@"RegistreAC"] = textField.text;
            break;
    }
}



@end
